<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- as_recharge_withdraw_accepted[as_recharge_withdraw_accepted]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-03-31 16:41:12 -->
<mapper namespace="com.chinazyjr.as.dao.As_recharge_withdraw_acceptedDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="As_recharge_withdraw_acceptedPO">
		INSERT INTO as_recharge_withdraw_accepted (
		<if test="accepted_time_ != null and accepted_time_ != ''">
	         accepted_time_, <!-- accepted_time_ -->
		</if>
		<if test="request_uuid_ != null and request_uuid_ != ''">
	         request_uuid_, <!-- request_uuid_ -->
		</if>
		<if test="async_callback_ != null and async_callback_ != ''">
	         async_callback_, <!-- async_callback_ -->
		</if>
		<if test="type_ != null">
	         type_, <!-- type_ -->
		</if>
		<if test="third_channel_ != null">
	         third_channel_, <!-- third_channel_ -->
		</if>
		<if test="order_id_ != null and order_id_ != ''">
	         order_id_, <!-- order_id_ -->
		</if>
		<if test="request_time_ != null and request_time_ != ''">
	         request_time_, <!-- request_time_ -->
		</if>
		<if test="response_time_ != null and response_time_ != ''">
	         response_time_, <!-- response_time_ -->
		</if>
		<if test="target_ != null and target_ != ''">
	         target_, <!-- target_ -->
		</if>
		<if test="amount_ != null">
	         amount_, <!-- amount_ -->
		</if>
		<if test="third_channel_fee_ != null">
	         third_channel_fee_, <!-- third_channel_fee_ -->
		</if>
		<if test="arrived_amount_ != null">
	         arrived_amount_, <!-- arrived_amount_ -->
		</if>
		<if test="arrived_time_ != null and arrived_time_ != ''">
	         arrived_time_, <!-- arrived_time_ -->
		</if>
		<if test="recharge_remark_ != null and recharge_remark_ != ''">
	         recharge_remark_, <!-- recharge_remark_ -->
		</if>
		<if test="business_remark_ != null and business_remark_ != ''">
	         business_remark_, <!-- business_remark_ -->
		</if>
		<if test="ext_reference_ != null and ext_reference_ != ''">
	         ext_reference_, <!-- ext_reference_ -->
		</if>
		<if test="proving_way_ != null">
	         proving_way_, <!-- proving_way_ -->
		</if>
		<if test="accepted_status_ != null">
	         accepted_status_, <!-- accepted_status_ -->
		</if>
	          id_
		)VALUES(
		<if test="accepted_time_ != null and accepted_time_ != ''">
	          #{accepted_time_, jdbcType=VARCHAR}, <!-- accepted_time_ -->
	    </if>
		<if test="request_uuid_ != null and request_uuid_ != ''">
	          #{request_uuid_, jdbcType=VARCHAR}, <!-- request_uuid_ -->
	    </if>
		<if test="async_callback_ != null and async_callback_ != ''">
	          #{async_callback_, jdbcType=VARCHAR}, <!-- async_callback_ -->
	    </if>
		<if test="type_ != null">
	          #{type_, jdbcType=INTEGER}, <!-- type_ -->
	    </if>
		<if test="third_channel_ != null">
	          #{third_channel_, jdbcType=INTEGER}, <!-- third_channel_ -->
	    </if>
		<if test="order_id_ != null and order_id_ != ''">
	          #{order_id_, jdbcType=VARCHAR}, <!-- order_id_ -->
	    </if>
		<if test="request_time_ != null and request_time_ != ''">
	          #{request_time_, jdbcType=VARCHAR}, <!-- request_time_ -->
	    </if>
		<if test="response_time_ != null and response_time_ != ''">
	          #{response_time_, jdbcType=VARCHAR}, <!-- response_time_ -->
	    </if>
		<if test="target_ != null and target_ != ''">
	          #{target_, jdbcType=VARCHAR}, <!-- target_ -->
	    </if>
		<if test="amount_ != null">
	          #{amount_, jdbcType=NUMERIC}, <!-- amount_ -->
	    </if>
		<if test="third_channel_fee_ != null">
	          #{third_channel_fee_, jdbcType=NUMERIC}, <!-- third_channel_fee_ -->
	    </if>
		<if test="arrived_amount_ != null">
	          #{arrived_amount_, jdbcType=NUMERIC}, <!-- arrived_amount_ -->
	    </if>
		<if test="arrived_time_ != null and arrived_time_ != ''">
	          #{arrived_time_, jdbcType=VARCHAR}, <!-- arrived_time_ -->
	    </if>
		<if test="recharge_remark_ != null and recharge_remark_ != ''">
	          #{recharge_remark_, jdbcType=VARCHAR}, <!-- recharge_remark_ -->
	    </if>
		<if test="business_remark_ != null and business_remark_ != ''">
	          #{business_remark_, jdbcType=VARCHAR}, <!-- business_remark_ -->
	    </if>
		<if test="ext_reference_ != null and ext_reference_ != ''">
	          #{ext_reference_, jdbcType=VARCHAR}, <!-- ext_reference_ -->
	    </if>
		<if test="proving_way_ != null">
	          #{proving_way_, jdbcType=INTEGER}, <!-- proving_way_ -->
	    </if>
		<if test="accepted_status_ != null">
	          #{accepted_status_, jdbcType=INTEGER}, <!-- accepted_status_ -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="As_recharge_withdraw_acceptedPO">
		INSERT INTO as_recharge_withdraw_accepted (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{accepted_time_, jdbcType=VARCHAR},  <!-- accepted_time_ -->
		    #{request_uuid_, jdbcType=VARCHAR},  <!-- request_uuid_ -->
		    #{async_callback_, jdbcType=VARCHAR},  <!-- async_callback_ -->
		    #{type_, jdbcType=INTEGER},  <!-- type_ -->
		    #{third_channel_, jdbcType=INTEGER},  <!-- third_channel_ -->
		    #{order_id_, jdbcType=VARCHAR},  <!-- order_id_ -->
		    #{request_time_, jdbcType=VARCHAR},  <!-- request_time_ -->
		    #{response_time_, jdbcType=VARCHAR},  <!-- response_time_ -->
		    #{target_, jdbcType=VARCHAR},  <!-- target_ -->
		    #{amount_, jdbcType=NUMERIC},  <!-- amount_ -->
		    #{third_channel_fee_, jdbcType=NUMERIC},  <!-- third_channel_fee_ -->
		    #{arrived_amount_, jdbcType=NUMERIC},  <!-- arrived_amount_ -->
		    #{arrived_time_, jdbcType=VARCHAR},  <!-- arrived_time_ -->
		    #{recharge_remark_, jdbcType=VARCHAR},  <!-- recharge_remark_ -->
		    #{business_remark_, jdbcType=VARCHAR},  <!-- business_remark_ -->
		    #{ext_reference_, jdbcType=VARCHAR},  <!-- ext_reference_ -->
		    #{proving_way_, jdbcType=INTEGER},  <!-- proving_way_ -->
		    #{accepted_status_, jdbcType=INTEGER}  <!-- accepted_status_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="As_recharge_withdraw_acceptedPO">
		UPDATE as_recharge_withdraw_accepted
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="accepted_time_ != null">
		          accepted_time_ = #{accepted_time_, jdbcType=VARCHAR},  <!-- accepted_time_ -->
			</if>
			<if test="request_uuid_ != null">
		          request_uuid_ = #{request_uuid_, jdbcType=VARCHAR},  <!-- request_uuid_ -->
			</if>
			<if test="async_callback_ != null">
		          async_callback_ = #{async_callback_, jdbcType=VARCHAR},  <!-- async_callback_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=INTEGER},  <!-- type_ -->
			</if>
			<if test="third_channel_ != null">
		          third_channel_ = #{third_channel_, jdbcType=INTEGER},  <!-- third_channel_ -->
			</if>
			<if test="order_id_ != null">
		          order_id_ = #{order_id_, jdbcType=VARCHAR},  <!-- order_id_ -->
			</if>
			<if test="request_time_ != null">
		          request_time_ = #{request_time_, jdbcType=VARCHAR},  <!-- request_time_ -->
			</if>
			<if test="response_time_ != null">
		          response_time_ = #{response_time_, jdbcType=VARCHAR},  <!-- response_time_ -->
			</if>
			<if test="target_ != null">
		          target_ = #{target_, jdbcType=VARCHAR},  <!-- target_ -->
			</if>
			<if test="amount_ != null">
		          amount_ = #{amount_, jdbcType=NUMERIC},  <!-- amount_ -->
			</if>
			<if test="third_channel_fee_ != null">
		          third_channel_fee_ = #{third_channel_fee_, jdbcType=NUMERIC},  <!-- third_channel_fee_ -->
			</if>
			<if test="arrived_amount_ != null">
		          arrived_amount_ = #{arrived_amount_, jdbcType=NUMERIC},  <!-- arrived_amount_ -->
			</if>
			<if test="arrived_time_ != null">
		          arrived_time_ = #{arrived_time_, jdbcType=VARCHAR},  <!-- arrived_time_ -->
			</if>
			<if test="recharge_remark_ != null">
		          recharge_remark_ = #{recharge_remark_, jdbcType=VARCHAR},  <!-- recharge_remark_ -->
			</if>
			<if test="business_remark_ != null">
		          business_remark_ = #{business_remark_, jdbcType=VARCHAR},  <!-- business_remark_ -->
			</if>
			<if test="ext_reference_ != null">
		          ext_reference_ = #{ext_reference_, jdbcType=VARCHAR},  <!-- ext_reference_ -->
			</if>
			<if test="proving_way_ != null">
		          proving_way_ = #{proving_way_, jdbcType=INTEGER},  <!-- proving_way_ -->
			</if>
			<if test="accepted_status_ != null">
		          accepted_status_ = #{accepted_status_, jdbcType=INTEGER},  <!-- accepted_status_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM as_recharge_withdraw_accepted WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="As_recharge_withdraw_acceptedPO">
		SELECT
		<include refid="column" />
		FROM as_recharge_withdraw_accepted WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="As_recharge_withdraw_acceptedPO">
		SELECT
		    <include refid="column" />
		FROM as_recharge_withdraw_accepted
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="As_recharge_withdraw_acceptedPO">
		SELECT
			<include refid="column" />	
		FROM as_recharge_withdraw_accepted
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="As_recharge_withdraw_acceptedPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM as_recharge_withdraw_accepted
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="As_recharge_withdraw_acceptedPO">
		SELECT
			<include refid="column" />	
		FROM as_recharge_withdraw_accepted
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="As_recharge_withdraw_acceptedPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM as_recharge_withdraw_accepted
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM as_recharge_withdraw_accepted
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM as_recharge_withdraw_accepted
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  accepted_time_,  <!-- accepted_time_ -->
		  request_uuid_,  <!-- request_uuid_ -->
		  async_callback_,  <!-- async_callback_ -->
		  type_,  <!-- type_ -->
		  third_channel_,  <!-- third_channel_ -->
		  order_id_,  <!-- order_id_ -->
		  request_time_,  <!-- request_time_ -->
		  response_time_,  <!-- response_time_ -->
		  target_,  <!-- target_ -->
		  amount_,  <!-- amount_ -->
		  third_channel_fee_,  <!-- third_channel_fee_ -->
		  arrived_amount_,  <!-- arrived_amount_ -->
		  arrived_time_,  <!-- arrived_time_ -->
		  recharge_remark_,  <!-- recharge_remark_ -->
		  business_remark_,  <!-- business_remark_ -->
		  ext_reference_,  <!-- ext_reference_ -->
		  proving_way_,  <!-- proving_way_ -->
		  accepted_status_  <!-- accepted_status_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  as_recharge_withdraw_accepted.id_,  <!-- id_ -->
		  as_recharge_withdraw_accepted.accepted_time_,  <!-- accepted_time_ -->
		  as_recharge_withdraw_accepted.request_uuid_,  <!-- request_uuid_ -->
		  as_recharge_withdraw_accepted.async_callback_,  <!-- async_callback_ -->
		  as_recharge_withdraw_accepted.type_,  <!-- type_ -->
		  as_recharge_withdraw_accepted.third_channel_,  <!-- third_channel_ -->
		  as_recharge_withdraw_accepted.order_id_,  <!-- order_id_ -->
		  as_recharge_withdraw_accepted.request_time_,  <!-- request_time_ -->
		  as_recharge_withdraw_accepted.response_time_,  <!-- response_time_ -->
		  as_recharge_withdraw_accepted.target_,  <!-- target_ -->
		  as_recharge_withdraw_accepted.amount_,  <!-- amount_ -->
		  as_recharge_withdraw_accepted.third_channel_fee_,  <!-- third_channel_fee_ -->
		  as_recharge_withdraw_accepted.arrived_amount_,  <!-- arrived_amount_ -->
		  as_recharge_withdraw_accepted.arrived_time_,  <!-- arrived_time_ -->
		  as_recharge_withdraw_accepted.recharge_remark_,  <!-- recharge_remark_ -->
		  as_recharge_withdraw_accepted.business_remark_,  <!-- business_remark_ -->
		  as_recharge_withdraw_accepted.ext_reference_,  <!-- ext_reference_ -->
		  as_recharge_withdraw_accepted.proving_way_,  <!-- proving_way_ -->
		  as_recharge_withdraw_accepted.accepted_status_  <!-- accepted_status_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="accepted_time_ != null and accepted_time_ != ''">
		      AND accepted_time_ = #{accepted_time_}  <!-- accepted_time_ -->
		</if>
	    <if test="request_uuid_ != null and request_uuid_ != ''">
		      AND request_uuid_ = #{request_uuid_}  <!-- request_uuid_ -->
		</if>
	    <if test="async_callback_ != null and async_callback_ != ''">
		      AND async_callback_ = #{async_callback_}  <!-- async_callback_ -->
		</if>
	   <if test="type_ != null ">
		      AND type_ = #{type_}  <!-- type_ -->
		</if>
	   <if test="third_channel_ != null ">
		      AND third_channel_ = #{third_channel_}  <!-- third_channel_ -->
		</if>
	    <if test="order_id_ != null and order_id_ != ''">
		      AND order_id_ = #{order_id_}  <!-- order_id_ -->
		</if>
	    <if test="request_time_ != null and request_time_ != ''">
		      AND request_time_ = #{request_time_}  <!-- request_time_ -->
		</if>
	    <if test="response_time_ != null and response_time_ != ''">
		      AND response_time_ = #{response_time_}  <!-- response_time_ -->
		</if>
	    <if test="target_ != null and target_ != ''">
		      AND target_ = #{target_}  <!-- target_ -->
		</if>
	   <if test="amount_ != null ">
		      AND amount_ = #{amount_}  <!-- amount_ -->
		</if>
	   <if test="third_channel_fee_ != null ">
		      AND third_channel_fee_ = #{third_channel_fee_}  <!-- third_channel_fee_ -->
		</if>
	   <if test="arrived_amount_ != null ">
		      AND arrived_amount_ = #{arrived_amount_}  <!-- arrived_amount_ -->
		</if>
	    <if test="arrived_time_ != null and arrived_time_ != ''">
		      AND arrived_time_ = #{arrived_time_}  <!-- arrived_time_ -->
		</if>
	    <if test="recharge_remark_ != null and recharge_remark_ != ''">
		      AND recharge_remark_ = #{recharge_remark_}  <!-- recharge_remark_ -->
		</if>
	    <if test="business_remark_ != null and business_remark_ != ''">
		      AND business_remark_ = #{business_remark_}  <!-- business_remark_ -->
		</if>
	    <if test="ext_reference_ != null and ext_reference_ != ''">
		      AND ext_reference_ = #{ext_reference_}  <!-- ext_reference_ -->
		</if>
	   <if test="proving_way_ != null ">
		      AND proving_way_ = #{proving_way_}  <!-- proving_way_ -->
		</if>
	   <if test="accepted_status_ != null ">
		      AND accepted_status_ = #{accepted_status_}  <!-- accepted_status_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="accepted_time_ != null and accepted_time_ != ''">
		      AND accepted_time_ like '%${accepted_time_}%'  <!-- accepted_time_ -->
		</if>
	    <if test="request_uuid_ != null and request_uuid_ != ''">
		      AND request_uuid_ like '%${request_uuid_}%'  <!-- request_uuid_ -->
		</if>
	    <if test="async_callback_ != null and async_callback_ != ''">
		      AND async_callback_ like '%${async_callback_}%'  <!-- async_callback_ -->
		</if>
	    <if test="order_id_ != null and order_id_ != ''">
		      AND order_id_ like '%${order_id_}%'  <!-- order_id_ -->
		</if>
	    <if test="request_time_ != null and request_time_ != ''">
		      AND request_time_ like '%${request_time_}%'  <!-- request_time_ -->
		</if>
	    <if test="response_time_ != null and response_time_ != ''">
		      AND response_time_ like '%${response_time_}%'  <!-- response_time_ -->
		</if>
	    <if test="target_ != null and target_ != ''">
		      AND target_ like '%${target_}%'  <!-- target_ -->
		</if>
	    <if test="arrived_time_ != null and arrived_time_ != ''">
		      AND arrived_time_ like '%${arrived_time_}%'  <!-- arrived_time_ -->
		</if>
	    <if test="recharge_remark_ != null and recharge_remark_ != ''">
		      AND recharge_remark_ like '%${recharge_remark_}%'  <!-- recharge_remark_ -->
		</if>
	    <if test="business_remark_ != null and business_remark_ != ''">
		      AND business_remark_ like '%${business_remark_}%'  <!-- business_remark_ -->
		</if>
	    <if test="ext_reference_ != null and ext_reference_ != ''">
		      AND ext_reference_ like '%${ext_reference_}%'  <!-- ext_reference_ -->
		</if>
	</sql>
	
</mapper>