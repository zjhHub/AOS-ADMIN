<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- as_balance_plus_minus[as_balance_plus_minus]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-03-29 10:15:59 -->
<mapper namespace="com.chinazyjr.as.dao.As_balance_plus_minusDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="As_balance_plus_minusPO">
		INSERT INTO as_balance_plus_minus (
		<if test="account_id_ != null">
	         account_id_, <!-- account_id_ -->
		</if>
		<if test="msg_code_ != null">
	         msg_code_, <!-- msg_code_ -->
		</if>
		<if test="position_ != null">
	         position_, <!-- position_ -->
		</if>
		<if test="tag_ != null">
	         tag_, <!-- tag_ -->
		</if>
		<if test="amount_ != null">
	         amount_, <!-- amount_ -->
		</if>
		<if test="certificate_path_ != null and certificate_path_ != ''">
	         certificate_path_, <!-- certificate_path_ -->
		</if>
		<if test="remark_ != null and remark_ != ''">
	         remark_, <!-- remark_ -->
		</if>
		<if test="created_time_ != null and created_time_ != ''">
	         created_time_, <!-- created_time_ -->
		</if>
		<if test="created_by != null and created_by != ''">
	         created_by, <!-- created_by -->
		</if>
		<if test="status_ != null">
	         status_, <!-- status_ -->
		</if>
	          id_
		)VALUES(
		<if test="account_id_ != null">
	          #{account_id_, jdbcType=INTEGER}, <!-- account_id_ -->
	    </if>
		<if test="msg_code_ != null">
	          #{msg_code_, jdbcType=INTEGER}, <!-- msg_code_ -->
	    </if>
		<if test="position_ != null">
	          #{position_, jdbcType=INTEGER}, <!-- position_ -->
	    </if>
		<if test="tag_ != null">
	          #{tag_, jdbcType=INTEGER}, <!-- tag_ -->
	    </if>
		<if test="amount_ != null">
	          #{amount_, jdbcType=NUMERIC}, <!-- amount_ -->
	    </if>
		<if test="certificate_path_ != null and certificate_path_ != ''">
	          #{certificate_path_, jdbcType=VARCHAR}, <!-- certificate_path_ -->
	    </if>
		<if test="remark_ != null and remark_ != ''">
	          #{remark_, jdbcType=VARCHAR}, <!-- remark_ -->
	    </if>
		<if test="created_time_ != null and created_time_ != ''">
	          #{created_time_, jdbcType=VARCHAR}, <!-- created_time_ -->
	    </if>
		<if test="created_by != null and created_by != ''">
	          #{created_by, jdbcType=VARCHAR}, <!-- created_by -->
	    </if>
		<if test="status_ != null">
	          #{status_, jdbcType=INTEGER}, <!-- status_ -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="As_balance_plus_minusPO">
		INSERT INTO as_balance_plus_minus (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{account_id_, jdbcType=INTEGER},  <!-- account_id_ -->
		    #{msg_code_, jdbcType=INTEGER},  <!-- msg_code_ -->
		    #{position_, jdbcType=INTEGER},  <!-- position_ -->
		    #{tag_, jdbcType=INTEGER},  <!-- tag_ -->
		    #{amount_, jdbcType=NUMERIC},  <!-- amount_ -->
		    #{certificate_path_, jdbcType=VARCHAR},  <!-- certificate_path_ -->
		    #{remark_, jdbcType=VARCHAR},  <!-- remark_ -->
		    #{created_time_, jdbcType=VARCHAR},  <!-- created_time_ -->
		    #{created_by, jdbcType=VARCHAR},  <!-- created_by -->
		    #{status_, jdbcType=INTEGER}  <!-- status_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="As_balance_plus_minusPO">
		UPDATE as_balance_plus_minus
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="account_id_ != null">
		          account_id_ = #{account_id_, jdbcType=INTEGER},  <!-- account_id_ -->
			</if>
			<if test="msg_code_ != null">
		          msg_code_ = #{msg_code_, jdbcType=INTEGER},  <!-- msg_code_ -->
			</if>
			<if test="position_ != null">
		          position_ = #{position_, jdbcType=INTEGER},  <!-- position_ -->
			</if>
			<if test="tag_ != null">
		          tag_ = #{tag_, jdbcType=INTEGER},  <!-- tag_ -->
			</if>
			<if test="amount_ != null">
		          amount_ = #{amount_, jdbcType=NUMERIC},  <!-- amount_ -->
			</if>
			<if test="certificate_path_ != null">
		          certificate_path_ = #{certificate_path_, jdbcType=VARCHAR},  <!-- certificate_path_ -->
			</if>
			<if test="remark_ != null">
		          remark_ = #{remark_, jdbcType=VARCHAR},  <!-- remark_ -->
			</if>
			<if test="created_time_ != null">
		          created_time_ = #{created_time_, jdbcType=VARCHAR},  <!-- created_time_ -->
			</if>
			<if test="created_by != null">
		          created_by = #{created_by, jdbcType=VARCHAR},  <!-- created_by -->
			</if>
			<if test="status_ != null">
		          status_ = #{status_, jdbcType=INTEGER},  <!-- status_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM as_balance_plus_minus WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="As_balance_plus_minusPO">
		SELECT
		<include refid="column" />
		FROM as_balance_plus_minus WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="As_balance_plus_minusPO">
		SELECT
		    <include refid="column" />
		FROM as_balance_plus_minus
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="As_balance_plus_minusPO">
		SELECT
			<include refid="column" />	
		FROM as_balance_plus_minus
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="As_balance_plus_minusPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM as_balance_plus_minus
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="As_balance_plus_minusPO">
		SELECT
			<include refid="column" />	
		FROM as_balance_plus_minus
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="As_balance_plus_minusPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM as_balance_plus_minus
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM as_balance_plus_minus
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM as_balance_plus_minus
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  account_id_,  <!-- account_id_ -->
		  msg_code_,  <!-- msg_code_ -->
		  position_,  <!-- position_ -->
		  tag_,  <!-- tag_ -->
		  amount_,  <!-- amount_ -->
		  certificate_path_,  <!-- certificate_path_ -->
		  remark_,  <!-- remark_ -->
		  created_time_,  <!-- created_time_ -->
		  created_by,  <!-- created_by -->
		  status_  <!-- status_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  as_balance_plus_minus.id_,  <!-- id_ -->
		  as_balance_plus_minus.account_id_,  <!-- account_id_ -->
		  as_balance_plus_minus.msg_code_,  <!-- msg_code_ -->
		  as_balance_plus_minus.position_,  <!-- position_ -->
		  as_balance_plus_minus.tag_,  <!-- tag_ -->
		  as_balance_plus_minus.amount_,  <!-- amount_ -->
		  as_balance_plus_minus.certificate_path_,  <!-- certificate_path_ -->
		  as_balance_plus_minus.remark_,  <!-- remark_ -->
		  as_balance_plus_minus.created_time_,  <!-- created_time_ -->
		  as_balance_plus_minus.created_by,  <!-- created_by -->
		  as_balance_plus_minus.status_  <!-- status_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	   <if test="account_id_ != null ">
		      AND account_id_ = #{account_id_}  <!-- account_id_ -->
		</if>
	   <if test="msg_code_ != null ">
		      AND msg_code_ = #{msg_code_}  <!-- msg_code_ -->
		</if>
	   <if test="position_ != null ">
		      AND position_ = #{position_}  <!-- position_ -->
		</if>
	   <if test="tag_ != null ">
		      AND tag_ = #{tag_}  <!-- tag_ -->
		</if>
	   <if test="amount_ != null ">
		      AND amount_ = #{amount_}  <!-- amount_ -->
		</if>
	    <if test="certificate_path_ != null and certificate_path_ != ''">
		      AND certificate_path_ = #{certificate_path_}  <!-- certificate_path_ -->
		</if>
	    <if test="remark_ != null and remark_ != ''">
		      AND remark_ = #{remark_}  <!-- remark_ -->
		</if>
	    <if test="created_time_ != null and created_time_ != ''">
		      AND created_time_ = #{created_time_}  <!-- created_time_ -->
		</if>
	    <if test="created_by != null and created_by != ''">
		      AND created_by = #{created_by}  <!-- created_by -->
		</if>
	   <if test="status_ != null ">
		      AND status_ = #{status_}  <!-- status_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="certificate_path_ != null and certificate_path_ != ''">
		      AND certificate_path_ like '%${certificate_path_}%'  <!-- certificate_path_ -->
		</if>
	    <if test="remark_ != null and remark_ != ''">
		      AND remark_ like '%${remark_}%'  <!-- remark_ -->
		</if>
	    <if test="created_time_ != null and created_time_ != ''">
		      AND created_time_ like '%${created_time_}%'  <!-- created_time_ -->
		</if>
	    <if test="created_by != null and created_by != ''">
		      AND created_by like '%${created_by}%'  <!-- created_by -->
		</if>
	</sql>
	
</mapper>