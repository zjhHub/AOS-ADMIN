<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_third_channel[fc_third_channel]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-02-07 10:53:02 -->
<mapper namespace="aos.fc.dao.Fc_third_channelDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_third_channelPO">
		INSERT INTO fc_third_channel (
		<if test="code_ != null and code_ != ''">
	         code_, <!-- code_ -->
		</if>
		<if test="name_ != null and name_ != ''">
	         name_, <!-- name_ -->
		</if>
		<if test="failure_permission_times_ != null">
	         failure_permission_times_, <!-- failure_permission_times_ -->
		</if>
		<if test="success_permission_times_ != null">
	         success_permission_times_, <!-- success_permission_times_ -->
		</if>
		<if test="route_priority != null">
	         route_priority, <!-- route_priority -->
		</if>
		<if test="back_sign_supported_ != null">
	         back_sign_supported_, <!-- back_sign_supported_ -->
		</if>
		<if test="order_sequence_ != null">
	         order_sequence_, <!-- order_sequence_ -->
		</if>
		<if test="loan_supported_ != null">
	         loan_supported_, <!-- loan_supported_ -->
		</if>
	          id_
		)VALUES(
		<if test="code_ != null and code_ != ''">
	          #{code_, jdbcType=VARCHAR}, <!-- code_ -->
	    </if>
		<if test="name_ != null and name_ != ''">
	          #{name_, jdbcType=VARCHAR}, <!-- name_ -->
	    </if>
		<if test="failure_permission_times_ != null">
	          #{failure_permission_times_, jdbcType=INTEGER}, <!-- failure_permission_times_ -->
	    </if>
		<if test="success_permission_times_ != null">
	          #{success_permission_times_, jdbcType=INTEGER}, <!-- success_permission_times_ -->
	    </if>
		<if test="route_priority != null">
	          #{route_priority, jdbcType=INTEGER}, <!-- route_priority -->
	    </if>
		<if test="back_sign_supported_ != null">
	          #{back_sign_supported_, jdbcType=INTEGER}, <!-- back_sign_supported_ -->
	    </if>
		<if test="order_sequence_ != null">
	          #{order_sequence_, jdbcType=INTEGER}, <!-- order_sequence_ -->
	    </if>
		<if test="loan_supported_ != null">
	          #{loan_supported_, jdbcType=INTEGER}, <!-- loan_supported_ -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_third_channelPO">
		INSERT INTO fc_third_channel (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{code_, jdbcType=VARCHAR},  <!-- code_ -->
		    #{name_, jdbcType=VARCHAR},  <!-- name_ -->
		    #{failure_permission_times_, jdbcType=INTEGER},  <!-- failure_permission_times_ -->
		    #{success_permission_times_, jdbcType=INTEGER},  <!-- success_permission_times_ -->
		    #{route_priority, jdbcType=INTEGER},  <!-- route_priority -->
		    #{back_sign_supported_, jdbcType=INTEGER},  <!-- back_sign_supported_ -->
		    #{order_sequence_, jdbcType=INTEGER},  <!-- order_sequence_ -->
		    #{loan_supported_, jdbcType=INTEGER}  <!-- loan_supported_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_third_channelPO">
		UPDATE fc_third_channel
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="code_ != null">
		          code_ = #{code_, jdbcType=VARCHAR},  <!-- code_ -->
			</if>
			<if test="name_ != null">
		          name_ = #{name_, jdbcType=VARCHAR},  <!-- name_ -->
			</if>
			<if test="failure_permission_times_ != null">
		          failure_permission_times_ = #{failure_permission_times_, jdbcType=INTEGER},  <!-- failure_permission_times_ -->
			</if>
			<if test="success_permission_times_ != null">
		          success_permission_times_ = #{success_permission_times_, jdbcType=INTEGER},  <!-- success_permission_times_ -->
			</if>
			<if test="route_priority != null">
		          route_priority = #{route_priority, jdbcType=INTEGER},  <!-- route_priority -->
			</if>
			<if test="back_sign_supported_ != null">
		          back_sign_supported_ = #{back_sign_supported_, jdbcType=INTEGER},  <!-- back_sign_supported_ -->
			</if>
			<if test="order_sequence_ != null">
		          order_sequence_ = #{order_sequence_, jdbcType=INTEGER},  <!-- order_sequence_ -->
			</if>
			<if test="loan_supported_ != null">
		          loan_supported_ = #{loan_supported_, jdbcType=INTEGER},  <!-- loan_supported_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_third_channel WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_third_channelPO">
		SELECT
		<include refid="column" />
		FROM fc_third_channel WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_third_channelPO">
		SELECT
		    <include refid="column" />
		FROM fc_third_channel
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_third_channelPO">
		SELECT
			<include refid="column" />	
		FROM fc_third_channel
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_third_channelPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_third_channel
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_third_channelPO">
		SELECT
			<include refid="column" />	
		FROM fc_third_channel
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_third_channelPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_third_channel
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_third_channel
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_third_channel
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  code_,  <!-- code_ -->
		  name_,  <!-- name_ -->
		  failure_permission_times_,  <!-- failure_permission_times_ -->
		  success_permission_times_,  <!-- success_permission_times_ -->
		  route_priority,  <!-- route_priority -->
		  back_sign_supported_,  <!-- back_sign_supported_ -->
		  order_sequence_,  <!-- order_sequence_ -->
		  loan_supported_  <!-- loan_supported_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_third_channel.id_,  <!-- id_ -->
		  fc_third_channel.code_,  <!-- code_ -->
		  fc_third_channel.name_,  <!-- name_ -->
		  fc_third_channel.failure_permission_times_,  <!-- failure_permission_times_ -->
		  fc_third_channel.success_permission_times_,  <!-- success_permission_times_ -->
		  fc_third_channel.route_priority,  <!-- route_priority -->
		  fc_third_channel.back_sign_supported_,  <!-- back_sign_supported_ -->
		  fc_third_channel.order_sequence_,  <!-- order_sequence_ -->
		  fc_third_channel.loan_supported_  <!-- loan_supported_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	    <if test="code_ != null and code_ != ''">
		      AND code_ = #{code_}  <!-- code_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		      AND name_ = #{name_}  <!-- name_ -->
		</if>
	   <if test="failure_permission_times_ != null ">
		      AND failure_permission_times_ = #{failure_permission_times_}  <!-- failure_permission_times_ -->
		</if>
	   <if test="success_permission_times_ != null ">
		      AND success_permission_times_ = #{success_permission_times_}  <!-- success_permission_times_ -->
		</if>
	   <if test="route_priority != null ">
		      AND route_priority = #{route_priority}  <!-- route_priority -->
		</if>
	   <if test="back_sign_supported_ != null ">
		      AND back_sign_supported_ = #{back_sign_supported_}  <!-- back_sign_supported_ -->
		</if>
	   <if test="order_sequence_ != null ">
		      AND order_sequence_ = #{order_sequence_}  <!-- order_sequence_ -->
		</if>
	   <if test="loan_supported_ != null ">
		      AND loan_supported_ = #{loan_supported_}  <!-- loan_supported_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="code_ != null and code_ != ''">
		      AND code_ like '%${code_}%'  <!-- code_ -->
		</if>
	    <if test="name_ != null and name_ != ''">
		      AND name_ like '%${name_}%'  <!-- name_ -->
		</if>
	</sql>
	
</mapper>