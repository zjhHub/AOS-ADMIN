<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_chargback_accepted_result[fc_chargback_accepted_result]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-02-07 10:52:59 -->
<mapper namespace="aos.fc.dao.Fc_chargback_accepted_resultDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Fc_chargback_accepted_resultPO">
		INSERT INTO fc_chargback_accepted_result (
		<if test="chargeback_status_ != null">
	         chargeback_status_, <!-- chargeback_status_ -->
		</if>
		<if test="chargebacked_amount_ != null">
	         chargebacked_amount_, <!-- chargebacked_amount_ -->
		</if>
		<if test="response_code_ != null and response_code_ != ''">
	         response_code_, <!-- response_code_ -->
		</if>
		<if test="response_summary_ != null and response_summary_ != ''">
	         response_summary_, <!-- response_summary_ -->
		</if>
		<if test="response_msg_templet_ != null and response_msg_templet_ != ''">
	         response_msg_templet_, <!-- response_msg_templet_ -->
		</if>
		<if test="first_callback_time_ != null and first_callback_time_ != ''">
	         first_callback_time_, <!-- first_callback_time_ -->
		</if>
		<if test="callback_content_ != null and callback_content_ != ''">
	         callback_content_, <!-- callback_content_ -->
		</if>
		<if test="next_callback_time_ != null and next_callback_time_ != ''">
	         next_callback_time_, <!-- next_callback_time_ -->
		</if>
		<if test="cur_callback_count != null">
	         cur_callback_count, <!-- cur_callback_count -->
		</if>
		<if test="chargeback_accepted_id_ != null">
	          chargeback_accepted_id_  <!-- chargeback_accepted_id_ -->
	   </if>
		)VALUES(
		<if test="chargeback_status_ != null">
	          #{chargeback_status_, jdbcType=INTEGER}, <!-- chargeback_status_ -->
	    </if>
		<if test="chargebacked_amount_ != null">
	          #{chargebacked_amount_, jdbcType=NUMERIC}, <!-- chargebacked_amount_ -->
	    </if>
		<if test="response_code_ != null and response_code_ != ''">
	          #{response_code_, jdbcType=VARCHAR}, <!-- response_code_ -->
	    </if>
		<if test="response_summary_ != null and response_summary_ != ''">
	          #{response_summary_, jdbcType=VARCHAR}, <!-- response_summary_ -->
	    </if>
		<if test="response_msg_templet_ != null and response_msg_templet_ != ''">
	          #{response_msg_templet_, jdbcType=VARCHAR}, <!-- response_msg_templet_ -->
	    </if>
		<if test="first_callback_time_ != null and first_callback_time_ != ''">
	          #{first_callback_time_, jdbcType=VARCHAR}, <!-- first_callback_time_ -->
	    </if>
		<if test="callback_content_ != null and callback_content_ != ''">
	          #{callback_content_, jdbcType=VARCHAR}, <!-- callback_content_ -->
	    </if>
		<if test="next_callback_time_ != null and next_callback_time_ != ''">
	          #{next_callback_time_, jdbcType=VARCHAR}, <!-- next_callback_time_ -->
	    </if>
		<if test="cur_callback_count != null">
	          #{cur_callback_count, jdbcType=INTEGER}, <!-- cur_callback_count -->
	    </if>
		<if test="chargeback_accepted_id_ != null">
		     #{chargeback_accepted_id_, jdbcType=INTEGER}  <!-- chargeback_accepted_id_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Fc_chargback_accepted_resultPO">
		INSERT INTO fc_chargback_accepted_result (
		    <include refid="column" />
		)
		VALUES (
		    #{chargeback_accepted_id_, jdbcType=INTEGER},  <!-- chargeback_accepted_id_ -->
		    #{chargeback_status_, jdbcType=INTEGER},  <!-- chargeback_status_ -->
		    #{chargebacked_amount_, jdbcType=NUMERIC},  <!-- chargebacked_amount_ -->
		    #{response_code_, jdbcType=VARCHAR},  <!-- response_code_ -->
		    #{response_summary_, jdbcType=VARCHAR},  <!-- response_summary_ -->
		    #{response_msg_templet_, jdbcType=VARCHAR},  <!-- response_msg_templet_ -->
		    #{first_callback_time_, jdbcType=VARCHAR},  <!-- first_callback_time_ -->
		    #{callback_content_, jdbcType=VARCHAR},  <!-- callback_content_ -->
		    #{next_callback_time_, jdbcType=VARCHAR},  <!-- next_callback_time_ -->
		    #{cur_callback_count, jdbcType=INTEGER}  <!-- cur_callback_count -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_chargback_accepted_resultPO">
		UPDATE fc_chargback_accepted_result
		<set>
			<if test="chargeback_accepted_id_ != null">
		          chargeback_accepted_id_ = #{chargeback_accepted_id_, jdbcType=INTEGER},  <!-- chargeback_accepted_id_ -->
			</if>
			<if test="chargeback_status_ != null">
		          chargeback_status_ = #{chargeback_status_, jdbcType=INTEGER},  <!-- chargeback_status_ -->
			</if>
			<if test="chargebacked_amount_ != null">
		          chargebacked_amount_ = #{chargebacked_amount_, jdbcType=NUMERIC},  <!-- chargebacked_amount_ -->
			</if>
			<if test="response_code_ != null">
		          response_code_ = #{response_code_, jdbcType=VARCHAR},  <!-- response_code_ -->
			</if>
			<if test="response_summary_ != null">
		          response_summary_ = #{response_summary_, jdbcType=VARCHAR},  <!-- response_summary_ -->
			</if>
			<if test="response_msg_templet_ != null">
		          response_msg_templet_ = #{response_msg_templet_, jdbcType=VARCHAR},  <!-- response_msg_templet_ -->
			</if>
			<if test="first_callback_time_ != null">
		          first_callback_time_ = #{first_callback_time_, jdbcType=VARCHAR},  <!-- first_callback_time_ -->
			</if>
			<if test="callback_content_ != null">
		          callback_content_ = #{callback_content_, jdbcType=VARCHAR},  <!-- callback_content_ -->
			</if>
			<if test="next_callback_time_ != null">
		          next_callback_time_ = #{next_callback_time_, jdbcType=VARCHAR},  <!-- next_callback_time_ -->
			</if>
			<if test="cur_callback_count != null">
		          cur_callback_count = #{cur_callback_count, jdbcType=INTEGER},  <!-- cur_callback_count -->
			</if>
		</set>
		WHERE  chargeback_accepted_id_ = #{chargeback_accepted_id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_chargback_accepted_result WHERE  chargeback_accepted_id_ = #{chargeback_accepted_id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_chargback_accepted_resultPO">
		SELECT
		<include refid="column" />
		FROM fc_chargback_accepted_result WHERE  chargeback_accepted_id_ = #{chargeback_accepted_id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_chargback_accepted_resultPO">
		SELECT
		    <include refid="column" />
		FROM fc_chargback_accepted_result
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_chargback_accepted_resultPO">
		SELECT
			<include refid="column" />	
		FROM fc_chargback_accepted_result
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_chargback_accepted_resultPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_chargback_accepted_result
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_chargback_accepted_resultPO">
		SELECT
			<include refid="column" />	
		FROM fc_chargback_accepted_result
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_chargback_accepted_resultPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_chargback_accepted_result
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_chargback_accepted_result
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_chargback_accepted_result
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  chargeback_accepted_id_,  <!-- chargeback_accepted_id_ -->
		  chargeback_status_,  <!-- chargeback_status_ -->
		  chargebacked_amount_,  <!-- chargebacked_amount_ -->
		  response_code_,  <!-- response_code_ -->
		  response_summary_,  <!-- response_summary_ -->
		  response_msg_templet_,  <!-- response_msg_templet_ -->
		  first_callback_time_,  <!-- first_callback_time_ -->
		  callback_content_,  <!-- callback_content_ -->
		  next_callback_time_,  <!-- next_callback_time_ -->
		  cur_callback_count  <!-- cur_callback_count -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_chargback_accepted_result.chargeback_accepted_id_,  <!-- chargeback_accepted_id_ -->
		  fc_chargback_accepted_result.chargeback_status_,  <!-- chargeback_status_ -->
		  fc_chargback_accepted_result.chargebacked_amount_,  <!-- chargebacked_amount_ -->
		  fc_chargback_accepted_result.response_code_,  <!-- response_code_ -->
		  fc_chargback_accepted_result.response_summary_,  <!-- response_summary_ -->
		  fc_chargback_accepted_result.response_msg_templet_,  <!-- response_msg_templet_ -->
		  fc_chargback_accepted_result.first_callback_time_,  <!-- first_callback_time_ -->
		  fc_chargback_accepted_result.callback_content_,  <!-- callback_content_ -->
		  fc_chargback_accepted_result.next_callback_time_,  <!-- next_callback_time_ -->
		  fc_chargback_accepted_result.cur_callback_count  <!-- cur_callback_count -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="chargeback_accepted_id_ != null ">
		      AND chargeback_accepted_id_ = #{chargeback_accepted_id_}  <!-- chargeback_accepted_id_ -->
		</if>
	   <if test="chargeback_status_ != null ">
		      AND chargeback_status_ = #{chargeback_status_}  <!-- chargeback_status_ -->
		</if>
	   <if test="chargebacked_amount_ != null ">
		      AND chargebacked_amount_ = #{chargebacked_amount_}  <!-- chargebacked_amount_ -->
		</if>
	    <if test="response_code_ != null and response_code_ != ''">
		      AND response_code_ = #{response_code_}  <!-- response_code_ -->
		</if>
	    <if test="response_summary_ != null and response_summary_ != ''">
		      AND response_summary_ = #{response_summary_}  <!-- response_summary_ -->
		</if>
	    <if test="response_msg_templet_ != null and response_msg_templet_ != ''">
		      AND response_msg_templet_ = #{response_msg_templet_}  <!-- response_msg_templet_ -->
		</if>
	    <if test="first_callback_time_ != null and first_callback_time_ != ''">
		      AND first_callback_time_ = #{first_callback_time_}  <!-- first_callback_time_ -->
		</if>
	    <if test="callback_content_ != null and callback_content_ != ''">
		      AND callback_content_ = #{callback_content_}  <!-- callback_content_ -->
		</if>
	    <if test="next_callback_time_ != null and next_callback_time_ != ''">
		      AND next_callback_time_ = #{next_callback_time_}  <!-- next_callback_time_ -->
		</if>
	   <if test="cur_callback_count != null ">
		      AND cur_callback_count = #{cur_callback_count}  <!-- cur_callback_count -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="response_code_ != null and response_code_ != ''">
		      AND response_code_ like '%${response_code_}%'  <!-- response_code_ -->
		</if>
	    <if test="response_summary_ != null and response_summary_ != ''">
		      AND response_summary_ like '%${response_summary_}%'  <!-- response_summary_ -->
		</if>
	    <if test="response_msg_templet_ != null and response_msg_templet_ != ''">
		      AND response_msg_templet_ like '%${response_msg_templet_}%'  <!-- response_msg_templet_ -->
		</if>
	    <if test="first_callback_time_ != null and first_callback_time_ != ''">
		      AND first_callback_time_ like '%${first_callback_time_}%'  <!-- first_callback_time_ -->
		</if>
	    <if test="callback_content_ != null and callback_content_ != ''">
		      AND callback_content_ like '%${callback_content_}%'  <!-- callback_content_ -->
		</if>
	    <if test="next_callback_time_ != null and next_callback_time_ != ''">
		      AND next_callback_time_ like '%${next_callback_time_}%'  <!-- next_callback_time_ -->
		</if>
	</sql>
	
</mapper>