<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_platform_reconciliation[fc_platform_reconciliation]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-04-15 14:35:01 -->
<mapper namespace="aos.fc.dao.Fc_platform_reconciliationDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_platform_reconciliationPO">
		INSERT INTO fc_platform_reconciliation (
		<if test="platform_id_ != null">
	         platform_id_, <!-- platform_id_ -->
		</if>
		<if test="type_ != null">
	         type_, <!-- type_ -->
		</if>
		<if test="reconciliation_date_ != null">
	         reconciliation_date_, <!-- reconciliation_date_ -->
		</if>
		<if test="success_count != null">
	         success_count, <!-- success_count -->
		</if>
		<if test="success_all_amount_ != null">
	         success_all_amount_, <!-- success_all_amount_ -->
		</if>
		<if test="file_path_ != null and file_path_ != ''">
	         file_path_, <!-- file_path_ -->
		</if>
		<if test="created_time != null and created_time != ''">
	         created_time, <!-- created_time -->
		</if>
	          id_
		)VALUES(
		<if test="platform_id_ != null">
	          #{platform_id_, jdbcType=INTEGER}, <!-- platform_id_ -->
	    </if>
		<if test="type_ != null">
	          #{type_, jdbcType=INTEGER}, <!-- type_ -->
	    </if>
		<if test="reconciliation_date_ != null">
	          #{reconciliation_date_, jdbcType=DATE}, <!-- reconciliation_date_ -->
	    </if>
		<if test="success_count != null">
	          #{success_count, jdbcType=INTEGER}, <!-- success_count -->
	    </if>
		<if test="success_all_amount_ != null">
	          #{success_all_amount_, jdbcType=NUMERIC}, <!-- success_all_amount_ -->
	    </if>
		<if test="file_path_ != null and file_path_ != ''">
	          #{file_path_, jdbcType=VARCHAR}, <!-- file_path_ -->
	    </if>
		<if test="created_time != null and created_time != ''">
	          #{created_time, jdbcType=VARCHAR}, <!-- created_time -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_platform_reconciliationPO">
		INSERT INTO fc_platform_reconciliation (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{platform_id_, jdbcType=INTEGER},  <!-- platform_id_ -->
		    #{type_, jdbcType=INTEGER},  <!-- type_ -->
		    #{reconciliation_date_, jdbcType=DATE},  <!-- reconciliation_date_ -->
		    #{success_count, jdbcType=INTEGER},  <!-- success_count -->
		    #{success_all_amount_, jdbcType=NUMERIC},  <!-- success_all_amount_ -->
		    #{file_path_, jdbcType=VARCHAR},  <!-- file_path_ -->
		    #{created_time, jdbcType=VARCHAR}  <!-- created_time -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_platform_reconciliationPO">
		UPDATE fc_platform_reconciliation
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="platform_id_ != null">
		          platform_id_ = #{platform_id_, jdbcType=INTEGER},  <!-- platform_id_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=INTEGER},  <!-- type_ -->
			</if>
			<if test="reconciliation_date_ != null">
		          reconciliation_date_ = #{reconciliation_date_, jdbcType=DATE},  <!-- reconciliation_date_ -->
			</if>
			<if test="success_count != null">
		          success_count = #{success_count, jdbcType=INTEGER},  <!-- success_count -->
			</if>
			<if test="success_all_amount_ != null">
		          success_all_amount_ = #{success_all_amount_, jdbcType=NUMERIC},  <!-- success_all_amount_ -->
			</if>
			<if test="file_path_ != null">
		          file_path_ = #{file_path_, jdbcType=VARCHAR},  <!-- file_path_ -->
			</if>
			<if test="created_time != null">
		          created_time = #{created_time, jdbcType=VARCHAR},  <!-- created_time -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_platform_reconciliation WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_platform_reconciliationPO">
		SELECT
		<include refid="column" />
		FROM fc_platform_reconciliation WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_platform_reconciliationPO">
		SELECT
		    <include refid="column" />
		FROM fc_platform_reconciliation
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_platform_reconciliationPO">
		SELECT
			<include refid="column" />	
		FROM fc_platform_reconciliation
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_platform_reconciliationPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_platform_reconciliation
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_platform_reconciliationPO">
		SELECT
			<include refid="column" />	
		FROM fc_platform_reconciliation
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_platform_reconciliationPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_platform_reconciliation
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_platform_reconciliation
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_platform_reconciliation
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  platform_id_,  <!-- platform_id_ -->
		  type_,  <!-- type_ -->
		  reconciliation_date_,  <!-- reconciliation_date_ -->
		  success_count,  <!-- success_count -->
		  success_all_amount_,  <!-- success_all_amount_ -->
		  file_path_,  <!-- file_path_ -->
		  created_time  <!-- created_time -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_platform_reconciliation.id_,  <!-- id_ -->
		  fc_platform_reconciliation.platform_id_,  <!-- platform_id_ -->
		  fc_platform_reconciliation.type_,  <!-- type_ -->
		  fc_platform_reconciliation.reconciliation_date_,  <!-- reconciliation_date_ -->
		  fc_platform_reconciliation.success_count,  <!-- success_count -->
		  fc_platform_reconciliation.success_all_amount_,  <!-- success_all_amount_ -->
		  fc_platform_reconciliation.file_path_,  <!-- file_path_ -->
		  fc_platform_reconciliation.created_time  <!-- created_time -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	   <if test="platform_id_ != null ">
		      AND platform_id_ = #{platform_id_}  <!-- platform_id_ -->
		</if>
	   <if test="type_ != null ">
		      AND type_ = #{type_}  <!-- type_ -->
		</if>
	   <if test="reconciliation_date_ != null ">
		      AND reconciliation_date_ = #{reconciliation_date_}  <!-- reconciliation_date_ -->
		</if>
	   <if test="success_count != null ">
		      AND success_count = #{success_count}  <!-- success_count -->
		</if>
	   <if test="success_all_amount_ != null ">
		      AND success_all_amount_ = #{success_all_amount_}  <!-- success_all_amount_ -->
		</if>
	    <if test="file_path_ != null and file_path_ != ''">
		      AND file_path_ = #{file_path_}  <!-- file_path_ -->
		</if>
	    <if test="created_time != null and created_time != ''">
		      AND created_time = #{created_time}  <!-- created_time -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="file_path_ != null and file_path_ != ''">
		      AND file_path_ like '%${file_path_}%'  <!-- file_path_ -->
		</if>
	    <if test="created_time != null and created_time != ''">
		      AND created_time like '%${created_time}%'  <!-- created_time -->
		</if>
	</sql>
	
</mapper>