<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_alarm[fc_alarm]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-03-15 17:08:47 -->
<mapper namespace="aos.fc.dao.Fc_alarmDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_alarmPO">
		INSERT INTO fc_alarm (
		<if test="alarm_type_ != null">
	         alarm_type_, <!-- alarm_type_ -->
		</if>
		<if test="reference_order_ != null">
	         reference_order_, <!-- reference_order_ -->
		</if>
		<if test="channel_name_ != null and channel_name_ != ''">
	         channel_name_, <!-- channel_name_ -->
		</if>
		<if test="channel_id_ != null">
	         channel_id_, <!-- channel_id_ -->
		</if>
		<if test="third_order_id_ != null and third_order_id_ != ''">
	         third_order_id_, <!-- third_order_id_ -->
		</if>
		<if test="reference_type_ != null">
	         reference_type_, <!-- reference_type_ -->
		</if>
		<if test="accepted_id_ != null">
	         accepted_id_, <!-- accepted_id_ -->
		</if>
		<if test="alarm_time_ != null and alarm_time_ != ''">
	         alarm_time_, <!-- alarm_time_ -->
		</if>
		<if test="alarm_reason_ != null and alarm_reason_ != ''">
	         alarm_reason_, <!-- alarm_reason_ -->
		</if>
		<if test="processing_people_ != null and processing_people_ != ''">
	         processing_people_, <!-- processing_people_ -->
		</if>
		<if test="processing_time_ != null and processing_time_ != ''">
	         processing_time_, <!-- processing_time_ -->
		</if>
		<if test="processing_content_ != null and processing_content_ != ''">
	         processing_content_, <!-- processing_content_ -->
		</if>
		<if test="alarm_status_ != null">
	         alarm_status_, <!-- alarm_status_ -->
		</if>
		<if test="alarm_count_ != null">
	         alarm_count_, <!-- alarm_count_ -->
		</if>
		<if test="alarm_next_ != null and alarm_next_ != ''">
	         alarm_next_, <!-- alarm_next_ -->
		</if>
		<if test="alarm_lo_ != null">
	         alarm_lo_, <!-- alarm_lo_ -->
		</if>
	          id_
		)VALUES(
		<if test="alarm_type_ != null">
	          #{alarm_type_, jdbcType=INTEGER}, <!-- alarm_type_ -->
	    </if>
		<if test="reference_order_ != null">
	          #{reference_order_, jdbcType=INTEGER}, <!-- reference_order_ -->
	    </if>
		<if test="channel_name_ != null and channel_name_ != ''">
	          #{channel_name_, jdbcType=VARCHAR}, <!-- channel_name_ -->
	    </if>
		<if test="channel_id_ != null">
	          #{channel_id_, jdbcType=INTEGER}, <!-- channel_id_ -->
	    </if>
		<if test="third_order_id_ != null and third_order_id_ != ''">
	          #{third_order_id_, jdbcType=VARCHAR}, <!-- third_order_id_ -->
	    </if>
		<if test="reference_type_ != null">
	          #{reference_type_, jdbcType=INTEGER}, <!-- reference_type_ -->
	    </if>
		<if test="accepted_id_ != null">
	          #{accepted_id_, jdbcType=INTEGER}, <!-- accepted_id_ -->
	    </if>
		<if test="alarm_time_ != null and alarm_time_ != ''">
	          #{alarm_time_, jdbcType=VARCHAR}, <!-- alarm_time_ -->
	    </if>
		<if test="alarm_reason_ != null and alarm_reason_ != ''">
	          #{alarm_reason_, jdbcType=VARCHAR}, <!-- alarm_reason_ -->
	    </if>
		<if test="processing_people_ != null and processing_people_ != ''">
	          #{processing_people_, jdbcType=VARCHAR}, <!-- processing_people_ -->
	    </if>
		<if test="processing_time_ != null and processing_time_ != ''">
	          #{processing_time_, jdbcType=VARCHAR}, <!-- processing_time_ -->
	    </if>
		<if test="processing_content_ != null and processing_content_ != ''">
	          #{processing_content_, jdbcType=VARCHAR}, <!-- processing_content_ -->
	    </if>
		<if test="alarm_status_ != null">
	          #{alarm_status_, jdbcType=INTEGER}, <!-- alarm_status_ -->
	    </if>
		<if test="alarm_count_ != null">
	          #{alarm_count_, jdbcType=INTEGER}, <!-- alarm_count_ -->
	    </if>
		<if test="alarm_next_ != null and alarm_next_ != ''">
	          #{alarm_next_, jdbcType=VARCHAR}, <!-- alarm_next_ -->
	    </if>
		<if test="alarm_lo_ != null">
	          #{alarm_lo_, jdbcType=INTEGER}, <!-- alarm_lo_ -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_alarmPO">
		INSERT INTO fc_alarm (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{alarm_type_, jdbcType=INTEGER},  <!-- alarm_type_ -->
		    #{reference_order_, jdbcType=INTEGER},  <!-- reference_order_ -->
		    #{channel_name_, jdbcType=VARCHAR},  <!-- channel_name_ -->
		    #{channel_id_, jdbcType=INTEGER},  <!-- channel_id_ -->
		    #{third_order_id_, jdbcType=VARCHAR},  <!-- third_order_id_ -->
		    #{reference_type_, jdbcType=INTEGER},  <!-- reference_type_ -->
		    #{accepted_id_, jdbcType=INTEGER},  <!-- accepted_id_ -->
		    #{alarm_time_, jdbcType=VARCHAR},  <!-- alarm_time_ -->
		    #{alarm_reason_, jdbcType=VARCHAR},  <!-- alarm_reason_ -->
		    #{processing_people_, jdbcType=VARCHAR},  <!-- processing_people_ -->
		    #{processing_time_, jdbcType=VARCHAR},  <!-- processing_time_ -->
		    #{processing_content_, jdbcType=VARCHAR},  <!-- processing_content_ -->
		    #{alarm_status_, jdbcType=INTEGER},  <!-- alarm_status_ -->
		    #{alarm_count_, jdbcType=INTEGER},  <!-- alarm_count_ -->
		    #{alarm_next_, jdbcType=VARCHAR},  <!-- alarm_next_ -->
		    #{alarm_lo_, jdbcType=INTEGER}  <!-- alarm_lo_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_alarmPO">
		UPDATE fc_alarm
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="alarm_type_ != null">
		          alarm_type_ = #{alarm_type_, jdbcType=INTEGER},  <!-- alarm_type_ -->
			</if>
			<if test="reference_order_ != null">
		          reference_order_ = #{reference_order_, jdbcType=INTEGER},  <!-- reference_order_ -->
			</if>
			<if test="channel_name_ != null">
		          channel_name_ = #{channel_name_, jdbcType=VARCHAR},  <!-- channel_name_ -->
			</if>
			<if test="channel_id_ != null">
		          channel_id_ = #{channel_id_, jdbcType=INTEGER},  <!-- channel_id_ -->
			</if>
			<if test="third_order_id_ != null">
		          third_order_id_ = #{third_order_id_, jdbcType=VARCHAR},  <!-- third_order_id_ -->
			</if>
			<if test="reference_type_ != null">
		          reference_type_ = #{reference_type_, jdbcType=INTEGER},  <!-- reference_type_ -->
			</if>
			<if test="accepted_id_ != null">
		          accepted_id_ = #{accepted_id_, jdbcType=INTEGER},  <!-- accepted_id_ -->
			</if>
			<if test="alarm_time_ != null">
		          alarm_time_ = #{alarm_time_, jdbcType=VARCHAR},  <!-- alarm_time_ -->
			</if>
			<if test="alarm_reason_ != null">
		          alarm_reason_ = #{alarm_reason_, jdbcType=VARCHAR},  <!-- alarm_reason_ -->
			</if>
			<if test="processing_people_ != null">
		          processing_people_ = #{processing_people_, jdbcType=VARCHAR},  <!-- processing_people_ -->
			</if>
			<if test="processing_time_ != null">
		          processing_time_ = #{processing_time_, jdbcType=VARCHAR},  <!-- processing_time_ -->
			</if>
			<if test="processing_content_ != null">
		          processing_content_ = #{processing_content_, jdbcType=VARCHAR},  <!-- processing_content_ -->
			</if>
			<if test="alarm_status_ != null">
		          alarm_status_ = #{alarm_status_, jdbcType=INTEGER},  <!-- alarm_status_ -->
			</if>
			<if test="alarm_count_ != null">
		          alarm_count_ = #{alarm_count_, jdbcType=INTEGER},  <!-- alarm_count_ -->
			</if>
			<if test="alarm_next_ != null">
		          alarm_next_ = #{alarm_next_, jdbcType=VARCHAR},  <!-- alarm_next_ -->
			</if>
			<if test="alarm_lo_ != null">
		          alarm_lo_ = #{alarm_lo_, jdbcType=INTEGER},  <!-- alarm_lo_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_alarm WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_alarmPO">
		SELECT
		<include refid="column" />
		FROM fc_alarm WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_alarmPO">
		SELECT
		    <include refid="column" />
		FROM fc_alarm
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_alarmPO">
		SELECT
			<include refid="column" />	
		FROM fc_alarm
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_alarmPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_alarm
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_alarmPO">
		SELECT
			<include refid="column" />	
		FROM fc_alarm
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_alarmPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_alarm
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_alarm
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_alarm
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  alarm_type_,  <!-- alarm_type_ -->
		  reference_order_,  <!-- reference_order_ -->
		  channel_name_,  <!-- channel_name_ -->
		  channel_id_,  <!-- channel_id_ -->
		  third_order_id_,  <!-- third_order_id_ -->
		  reference_type_,  <!-- reference_type_ -->
		  accepted_id_,  <!-- accepted_id_ -->
		  alarm_time_,  <!-- alarm_time_ -->
		  alarm_reason_,  <!-- alarm_reason_ -->
		  processing_people_,  <!-- processing_people_ -->
		  processing_time_,  <!-- processing_time_ -->
		  processing_content_,  <!-- processing_content_ -->
		  alarm_status_,  <!-- alarm_status_ -->
		  alarm_count_,  <!-- alarm_count_ -->
		  alarm_next_,  <!-- alarm_next_ -->
		  alarm_lo_  <!-- alarm_lo_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_alarm.id_,  <!-- id_ -->
		  fc_alarm.alarm_type_,  <!-- alarm_type_ -->
		  fc_alarm.reference_order_,  <!-- reference_order_ -->
		  fc_alarm.channel_name_,  <!-- channel_name_ -->
		  fc_alarm.channel_id_,  <!-- channel_id_ -->
		  fc_alarm.third_order_id_,  <!-- third_order_id_ -->
		  fc_alarm.reference_type_,  <!-- reference_type_ -->
		  fc_alarm.accepted_id_,  <!-- accepted_id_ -->
		  fc_alarm.alarm_time_,  <!-- alarm_time_ -->
		  fc_alarm.alarm_reason_,  <!-- alarm_reason_ -->
		  fc_alarm.processing_people_,  <!-- processing_people_ -->
		  fc_alarm.processing_time_,  <!-- processing_time_ -->
		  fc_alarm.processing_content_,  <!-- processing_content_ -->
		  fc_alarm.alarm_status_,  <!-- alarm_status_ -->
		  fc_alarm.alarm_count_,  <!-- alarm_count_ -->
		  fc_alarm.alarm_next_,  <!-- alarm_next_ -->
		  fc_alarm.alarm_lo_  <!-- alarm_lo_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	   <if test="alarm_type_ != null ">
		      AND alarm_type_ = #{alarm_type_}  <!-- alarm_type_ -->
		</if>
	   <if test="reference_order_ != null ">
		      AND reference_order_ = #{reference_order_}  <!-- reference_order_ -->
		</if>
	    <if test="channel_name_ != null and channel_name_ != ''">
		      AND channel_name_ = #{channel_name_}  <!-- channel_name_ -->
		</if>
	   <if test="channel_id_ != null ">
		      AND channel_id_ = #{channel_id_}  <!-- channel_id_ -->
		</if>
	    <if test="third_order_id_ != null and third_order_id_ != ''">
		      AND third_order_id_ = #{third_order_id_}  <!-- third_order_id_ -->
		</if>
	   <if test="reference_type_ != null ">
		      AND reference_type_ = #{reference_type_}  <!-- reference_type_ -->
		</if>
	   <if test="accepted_id_ != null ">
		      AND accepted_id_ = #{accepted_id_}  <!-- accepted_id_ -->
		</if>
	    <if test="alarm_time_ != null and alarm_time_ != ''">
		      AND alarm_time_ = #{alarm_time_}  <!-- alarm_time_ -->
		</if>
	    <if test="alarm_reason_ != null and alarm_reason_ != ''">
		      AND alarm_reason_ = #{alarm_reason_}  <!-- alarm_reason_ -->
		</if>
	    <if test="processing_people_ != null and processing_people_ != ''">
		      AND processing_people_ = #{processing_people_}  <!-- processing_people_ -->
		</if>
	    <if test="processing_time_ != null and processing_time_ != ''">
		      AND processing_time_ = #{processing_time_}  <!-- processing_time_ -->
		</if>
	    <if test="processing_content_ != null and processing_content_ != ''">
		      AND processing_content_ = #{processing_content_}  <!-- processing_content_ -->
		</if>
	   <if test="alarm_status_ != null ">
		      AND alarm_status_ = #{alarm_status_}  <!-- alarm_status_ -->
		</if>
	   <if test="alarm_count_ != null ">
		      AND alarm_count_ = #{alarm_count_}  <!-- alarm_count_ -->
		</if>
	    <if test="alarm_next_ != null and alarm_next_ != ''">
		      AND alarm_next_ = #{alarm_next_}  <!-- alarm_next_ -->
		</if>
	   <if test="alarm_lo_ != null ">
		      AND alarm_lo_ = #{alarm_lo_}  <!-- alarm_lo_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="channel_name_ != null and channel_name_ != ''">
		      AND channel_name_ like '%${channel_name_}%'  <!-- channel_name_ -->
		</if>
	    <if test="third_order_id_ != null and third_order_id_ != ''">
		      AND third_order_id_ like '%${third_order_id_}%'  <!-- third_order_id_ -->
		</if>
	    <if test="alarm_time_ != null and alarm_time_ != ''">
		      AND alarm_time_ like '%${alarm_time_}%'  <!-- alarm_time_ -->
		</if>
	    <if test="alarm_reason_ != null and alarm_reason_ != ''">
		      AND alarm_reason_ like '%${alarm_reason_}%'  <!-- alarm_reason_ -->
		</if>
	    <if test="processing_people_ != null and processing_people_ != ''">
		      AND processing_people_ like '%${processing_people_}%'  <!-- processing_people_ -->
		</if>
	    <if test="processing_time_ != null and processing_time_ != ''">
		      AND processing_time_ like '%${processing_time_}%'  <!-- processing_time_ -->
		</if>
	    <if test="processing_content_ != null and processing_content_ != ''">
		      AND processing_content_ like '%${processing_content_}%'  <!-- processing_content_ -->
		</if>
	    <if test="alarm_next_ != null and alarm_next_ != ''">
		      AND alarm_next_ like '%${alarm_next_}%'  <!-- alarm_next_ -->
		</if>
	</sql>
	
</mapper>