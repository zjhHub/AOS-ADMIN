<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_reconciliation_history[fc_reconciliation_history]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-02-17 10:39:11 -->
<mapper namespace="aos.fc.dao.Fc_reconciliation_historyDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_reconciliation_historyPO">
		INSERT INTO fc_reconciliation_history (
		<if test="record_id_ != null">
	         record_id_, <!-- record_id_ -->
		</if>
		<if test="third_channel_id_ != null">
	         third_channel_id_, <!-- third_channel_id_ -->
		</if>
		<if test="type_ != null">
	         type_, <!-- type_ -->
		</if>
		<if test="they_order_id_ != null and they_order_id_ != ''">
	         they_order_id_, <!-- they_order_id_ -->
		</if>
		<if test="they_settled_time_ != null and they_settled_time_ != ''">
	         they_settled_time_, <!-- they_settled_time_ -->
		</if>
		<if test="they_trans_amount_ != null">
	         they_trans_amount_, <!-- they_trans_amount_ -->
		</if>
		<if test="they_third_channel_fee_ != null">
	         they_third_channel_fee_, <!-- they_third_channel_fee_ -->
		</if>
		<if test="created_time_ != null and created_time_ != ''">
	         created_time_, <!-- created_time_ -->
		</if>
	          id_
		)VALUES(
		<if test="record_id_ != null">
	          #{record_id_, jdbcType=INTEGER}, <!-- record_id_ -->
	    </if>
		<if test="third_channel_id_ != null">
	          #{third_channel_id_, jdbcType=INTEGER}, <!-- third_channel_id_ -->
	    </if>
		<if test="type_ != null">
	          #{type_, jdbcType=INTEGER}, <!-- type_ -->
	    </if>
		<if test="they_order_id_ != null and they_order_id_ != ''">
	          #{they_order_id_, jdbcType=VARCHAR}, <!-- they_order_id_ -->
	    </if>
		<if test="they_settled_time_ != null and they_settled_time_ != ''">
	          #{they_settled_time_, jdbcType=VARCHAR}, <!-- they_settled_time_ -->
	    </if>
		<if test="they_trans_amount_ != null">
	          #{they_trans_amount_, jdbcType=NUMERIC}, <!-- they_trans_amount_ -->
	    </if>
		<if test="they_third_channel_fee_ != null">
	          #{they_third_channel_fee_, jdbcType=NUMERIC}, <!-- they_third_channel_fee_ -->
	    </if>
		<if test="created_time_ != null and created_time_ != ''">
	          #{created_time_, jdbcType=VARCHAR}, <!-- created_time_ -->
	    </if>
	          null
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll" useGeneratedKeys="true" keyProperty="id_" parameterType="Fc_reconciliation_historyPO">
		INSERT INTO fc_reconciliation_history (
		    <include refid="column" />
		)
		VALUES (
		    #{id_, jdbcType=INTEGER},  <!-- id_ -->
		    #{record_id_, jdbcType=INTEGER},  <!-- record_id_ -->
		    #{third_channel_id_, jdbcType=INTEGER},  <!-- third_channel_id_ -->
		    #{type_, jdbcType=INTEGER},  <!-- type_ -->
		    #{they_order_id_, jdbcType=VARCHAR},  <!-- they_order_id_ -->
		    #{they_settled_time_, jdbcType=VARCHAR},  <!-- they_settled_time_ -->
		    #{they_trans_amount_, jdbcType=NUMERIC},  <!-- they_trans_amount_ -->
		    #{they_third_channel_fee_, jdbcType=NUMERIC},  <!-- they_third_channel_fee_ -->
		    #{created_time_, jdbcType=VARCHAR}  <!-- created_time_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_reconciliation_historyPO">
		UPDATE fc_reconciliation_history
		<set>
			<if test="id_ != null">
		          id_ = #{id_, jdbcType=INTEGER},  <!-- id_ -->
			</if>
			<if test="record_id_ != null">
		          record_id_ = #{record_id_, jdbcType=INTEGER},  <!-- record_id_ -->
			</if>
			<if test="third_channel_id_ != null">
		          third_channel_id_ = #{third_channel_id_, jdbcType=INTEGER},  <!-- third_channel_id_ -->
			</if>
			<if test="type_ != null">
		          type_ = #{type_, jdbcType=INTEGER},  <!-- type_ -->
			</if>
			<if test="they_order_id_ != null">
		          they_order_id_ = #{they_order_id_, jdbcType=VARCHAR},  <!-- they_order_id_ -->
			</if>
			<if test="they_settled_time_ != null">
		          they_settled_time_ = #{they_settled_time_, jdbcType=VARCHAR},  <!-- they_settled_time_ -->
			</if>
			<if test="they_trans_amount_ != null">
		          they_trans_amount_ = #{they_trans_amount_, jdbcType=NUMERIC},  <!-- they_trans_amount_ -->
			</if>
			<if test="they_third_channel_fee_ != null">
		          they_third_channel_fee_ = #{they_third_channel_fee_, jdbcType=NUMERIC},  <!-- they_third_channel_fee_ -->
			</if>
			<if test="created_time_ != null">
		          created_time_ = #{created_time_, jdbcType=VARCHAR},  <!-- created_time_ -->
			</if>
		</set>
		WHERE  id_ = #{id_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_reconciliation_history WHERE  id_ = #{id_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_reconciliation_historyPO">
		SELECT
		<include refid="column" />
		FROM fc_reconciliation_history WHERE  id_ = #{id_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_reconciliation_historyPO">
		SELECT
		    <include refid="column" />
		FROM fc_reconciliation_history
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_reconciliation_historyPO">
		SELECT
			<include refid="column" />	
		FROM fc_reconciliation_history
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_reconciliation_historyPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_reconciliation_history
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_reconciliation_historyPO">
		SELECT
			<include refid="column" />	
		FROM fc_reconciliation_history
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_reconciliation_historyPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_reconciliation_history
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_reconciliation_history
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_reconciliation_history
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  id_,  <!-- id_ -->
		  record_id_,  <!-- record_id_ -->
		  third_channel_id_,  <!-- third_channel_id_ -->
		  type_,  <!-- type_ -->
		  they_order_id_,  <!-- they_order_id_ -->
		  they_settled_time_,  <!-- they_settled_time_ -->
		  they_trans_amount_,  <!-- they_trans_amount_ -->
		  they_third_channel_fee_,  <!-- they_third_channel_fee_ -->
		  created_time_  <!-- created_time_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_reconciliation_history.id_,  <!-- id_ -->
		  fc_reconciliation_history.record_id_,  <!-- record_id_ -->
		  fc_reconciliation_history.third_channel_id_,  <!-- third_channel_id_ -->
		  fc_reconciliation_history.type_,  <!-- type_ -->
		  fc_reconciliation_history.they_order_id_,  <!-- they_order_id_ -->
		  fc_reconciliation_history.they_settled_time_,  <!-- they_settled_time_ -->
		  fc_reconciliation_history.they_trans_amount_,  <!-- they_trans_amount_ -->
		  fc_reconciliation_history.they_third_channel_fee_,  <!-- they_third_channel_fee_ -->
		  fc_reconciliation_history.created_time_  <!-- created_time_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	   <if test="id_ != null ">
		      AND id_ = #{id_}  <!-- id_ -->
		</if>
	   <if test="record_id_ != null ">
		      AND record_id_ = #{record_id_}  <!-- record_id_ -->
		</if>
	   <if test="third_channel_id_ != null ">
		      AND third_channel_id_ = #{third_channel_id_}  <!-- third_channel_id_ -->
		</if>
	   <if test="type_ != null ">
		      AND type_ = #{type_}  <!-- type_ -->
		</if>
	    <if test="they_order_id_ != null and they_order_id_ != ''">
		      AND they_order_id_ = #{they_order_id_}  <!-- they_order_id_ -->
		</if>
	    <if test="they_settled_time_ != null and they_settled_time_ != ''">
		      AND they_settled_time_ = #{they_settled_time_}  <!-- they_settled_time_ -->
		</if>
	   <if test="they_trans_amount_ != null ">
		      AND they_trans_amount_ = #{they_trans_amount_}  <!-- they_trans_amount_ -->
		</if>
	   <if test="they_third_channel_fee_ != null ">
		      AND they_third_channel_fee_ = #{they_third_channel_fee_}  <!-- they_third_channel_fee_ -->
		</if>
	    <if test="created_time_ != null and created_time_ != ''">
		      AND created_time_ = #{created_time_}  <!-- created_time_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="they_order_id_ != null and they_order_id_ != ''">
		      AND they_order_id_ like '%${they_order_id_}%'  <!-- they_order_id_ -->
		</if>
	    <if test="they_settled_time_ != null and they_settled_time_ != ''">
		      AND they_settled_time_ like '%${they_settled_time_}%'  <!-- they_settled_time_ -->
		</if>
	    <if test="created_time_ != null and created_time_ != ''">
		      AND created_time_ like '%${created_time_}%'  <!-- created_time_ -->
		</if>
	</sql>
	
</mapper>