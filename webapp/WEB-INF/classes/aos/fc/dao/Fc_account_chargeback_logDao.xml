<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- fc_account_chargeback_log[fc_account_chargeback_log]SQL自动映射 -->
<!--  注意:此文件由AOS平台自动生成-禁止手工修改 2017-04-20 15:46:33 -->
<mapper namespace="aos.fc.dao.Fc_account_chargeback_logDao">
	
	<!-- 插入一个数据持久化对象(插入字段为传入PO实体的非空属性) -->
	<insert id="insert"  parameterType="Fc_account_chargeback_logPO">
		INSERT INTO fc_account_chargeback_log (
		<if test="chargeback_failed_times_ != null">
	         chargeback_failed_times_, <!-- chargeback_failed_times_ -->
		</if>
		<if test="chargeback_succeed_times_ != null">
	         chargeback_succeed_times_, <!-- chargeback_succeed_times_ -->
		</if>
		<if test="today_total_chargebacked_amount_ != null">
	         today_total_chargebacked_amount_, <!-- today_total_chargebacked_amount_ -->
		</if>
		<if test="chargeback_account_ != null and chargeback_account_ != ''">
	          chargeback_account_,  <!-- chargeback_account_ -->
	   </if>
		<if test="third_channel_id_ != null">
	          third_channel_id_,  <!-- third_channel_id_ -->
	   </if>
		<if test="target_date_ != null">
	          target_date_  <!-- target_date_ -->
	   </if>
		)VALUES(
		<if test="chargeback_failed_times_ != null">
	          #{chargeback_failed_times_, jdbcType=INTEGER}, <!-- chargeback_failed_times_ -->
	    </if>
		<if test="chargeback_succeed_times_ != null">
	          #{chargeback_succeed_times_, jdbcType=INTEGER}, <!-- chargeback_succeed_times_ -->
	    </if>
		<if test="today_total_chargebacked_amount_ != null">
	          #{today_total_chargebacked_amount_, jdbcType=NUMERIC}, <!-- today_total_chargebacked_amount_ -->
	    </if>
		<if test="chargeback_account_ != null and chargeback_account_ != ''">
		     #{chargeback_account_, jdbcType=VARCHAR},  <!-- chargeback_account_ -->
	    </if>
		<if test="third_channel_id_ != null">
		     #{third_channel_id_, jdbcType=INTEGER},  <!-- third_channel_id_ -->
	    </if>
		<if test="target_date_ != null">
		     #{target_date_, jdbcType=DATE}  <!-- target_date_ -->
	    </if>
		)
	</insert>
	
	<!-- 插入一个数据持久化对象(含所有字段) -->
	<insert id="insertAll"  parameterType="Fc_account_chargeback_logPO">
		INSERT INTO fc_account_chargeback_log (
		    <include refid="column" />
		)
		VALUES (
		    #{chargeback_account_, jdbcType=VARCHAR},  <!-- chargeback_account_ -->
		    #{third_channel_id_, jdbcType=INTEGER},  <!-- third_channel_id_ -->
		    #{target_date_, jdbcType=DATE},  <!-- target_date_ -->
		    #{chargeback_failed_times_, jdbcType=INTEGER},  <!-- chargeback_failed_times_ -->
		    #{chargeback_succeed_times_, jdbcType=INTEGER},  <!-- chargeback_succeed_times_ -->
		    #{today_total_chargebacked_amount_, jdbcType=NUMERIC}  <!-- today_total_chargebacked_amount_ -->
		)
	</insert>

	<!-- 根据主键修改数据持久化对象 -->
	<update id="updateByKey" parameterType="Fc_account_chargeback_logPO">
		UPDATE fc_account_chargeback_log
		<set>
			<if test="chargeback_account_ != null">
		          chargeback_account_ = #{chargeback_account_, jdbcType=VARCHAR},  <!-- chargeback_account_ -->
			</if>
			<if test="third_channel_id_ != null">
		          third_channel_id_ = #{third_channel_id_, jdbcType=INTEGER},  <!-- third_channel_id_ -->
			</if>
			<if test="target_date_ != null">
		          target_date_ = #{target_date_, jdbcType=DATE},  <!-- target_date_ -->
			</if>
			<if test="chargeback_failed_times_ != null">
		          chargeback_failed_times_ = #{chargeback_failed_times_, jdbcType=INTEGER},  <!-- chargeback_failed_times_ -->
			</if>
			<if test="chargeback_succeed_times_ != null">
		          chargeback_succeed_times_ = #{chargeback_succeed_times_, jdbcType=INTEGER},  <!-- chargeback_succeed_times_ -->
			</if>
			<if test="today_total_chargebacked_amount_ != null">
		          today_total_chargebacked_amount_ = #{today_total_chargebacked_amount_, jdbcType=NUMERIC},  <!-- today_total_chargebacked_amount_ -->
			</if>
		</set>
		WHERE  chargeback_account_ = #{chargeback_account_} AND third_channel_id_ = #{third_channel_id_} AND target_date_ = #{target_date_}
	</update>
	
	<!-- 根据主键删除数据持久化对象 -->
	<delete id="deleteByKey">
		DELETE FROM fc_account_chargeback_log WHERE  chargeback_account_ = #{chargeback_account_} AND third_channel_id_ = #{third_channel_id_} AND target_date_ = #{target_date_}
	</delete>

	<!-- 根据主键查询并返回数据持久化对象 -->
	<select id="selectByKey" resultType="Fc_account_chargeback_logPO">
		SELECT
		<include refid="column" />
		FROM fc_account_chargeback_log WHERE  chargeback_account_ = #{chargeback_account_} AND third_channel_id_ = #{third_channel_id_} AND target_date_ = #{target_date_}
	</select>

	<!-- 根据唯一组合条件查询并返回数据持久化对象 -->
	<select id="selectOne" parameterType="Dto" resultType="Fc_account_chargeback_logPO">
		SELECT
		    <include refid="column" />
		FROM fc_account_chargeback_log
		<where>
		    <include refid="equal" />
		</where>		
	</select>

	<!-- 根据Dto查询并返回数据持久化对象集合 -->
	<select id="list" parameterType="Dto" resultType="Fc_account_chargeback_logPO">
		SELECT
			<include refid="column" />	
		FROM fc_account_chargeback_log
		<where>
		    <include refid="equal" />
		</where>	
	</select>

	<!-- 根据Dto查询并返回分页数据持久化对象集合 -->
	<select id="listPage" parameterType="Dto" resultType="Fc_account_chargeback_logPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_account_chargeback_log
		<where>
		    <include refid="equal" />
		</where>	
	</select>
	
	<!-- 根据Dto模糊查询并返回数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="like" parameterType="Dto" resultType="Fc_account_chargeback_logPO">
		SELECT
			<include refid="column" />	
		FROM fc_account_chargeback_log
		<where>
		    <include refid="like" />
		</where>	
	</select>

	<!-- 根据Dto模糊查询并返回分页数据持久化对象集合(字符型字段模糊匹配，其余字段精确匹配) -->
	<select id="likePage" parameterType="Dto" resultType="Fc_account_chargeback_logPO" useCache="false">
	    SELECT
			<include refid="column" />	
		FRoM fc_account_chargeback_log
		<where>
		    <include refid="like" />
		</where>	
	</select>
	
	<!-- 根据Dto统计行数 -->
	<select id="rows" resultType="Integer" parameterType="Dto">
		SELECT COUNT(1) AS aos_rows_ FROM fc_account_chargeback_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 根据数学表达式进行数学运算 -->
	<select id="calc" parameterType="Dto" resultType="String">
		SELECT
			${_expr}
		FROM fc_account_chargeback_log
		<where>
		    <include refid="equal" />
		</where>
	</select>
	
	<!-- 表字段 -->
	<sql id="column">
		  chargeback_account_,  <!-- chargeback_account_ -->
		  third_channel_id_,  <!-- third_channel_id_ -->
		  target_date_,  <!-- target_date_ -->
		  chargeback_failed_times_,  <!-- chargeback_failed_times_ -->
		  chargeback_succeed_times_,  <!-- chargeback_succeed_times_ -->
		  today_total_chargebacked_amount_  <!-- today_total_chargebacked_amount_ -->
	</sql>
	
	<!-- 表字段(用于外表的关联时引用) -->
	<sql id="column2">
		  fc_account_chargeback_log.chargeback_account_,  <!-- chargeback_account_ -->
		  fc_account_chargeback_log.third_channel_id_,  <!-- third_channel_id_ -->
		  fc_account_chargeback_log.target_date_,  <!-- target_date_ -->
		  fc_account_chargeback_log.chargeback_failed_times_,  <!-- chargeback_failed_times_ -->
		  fc_account_chargeback_log.chargeback_succeed_times_,  <!-- chargeback_succeed_times_ -->
		  fc_account_chargeback_log.today_total_chargebacked_amount_  <!-- today_total_chargebacked_amount_ -->
	</sql>

	<!-- Where精确匹配字段 -->
	<sql id="equal">
	    <if test="chargeback_account_ != null and chargeback_account_ != ''">
		      AND chargeback_account_ = #{chargeback_account_}  <!-- chargeback_account_ -->
		</if>
	   <if test="third_channel_id_ != null ">
		      AND third_channel_id_ = #{third_channel_id_}  <!-- third_channel_id_ -->
		</if>
	   <if test="target_date_ != null ">
		      AND target_date_ = #{target_date_}  <!-- target_date_ -->
		</if>
	   <if test="chargeback_failed_times_ != null ">
		      AND chargeback_failed_times_ = #{chargeback_failed_times_}  <!-- chargeback_failed_times_ -->
		</if>
	   <if test="chargeback_succeed_times_ != null ">
		      AND chargeback_succeed_times_ = #{chargeback_succeed_times_}  <!-- chargeback_succeed_times_ -->
		</if>
	   <if test="today_total_chargebacked_amount_ != null ">
		      AND today_total_chargebacked_amount_ = #{today_total_chargebacked_amount_}  <!-- today_total_chargebacked_amount_ -->
		</if>
	</sql>
	
	<!-- Where模糊匹配字段 -->
	<sql id="like">
	    <if test="chargeback_account_ != null and chargeback_account_ != ''">
		      AND chargeback_account_ like '%${chargeback_account_}%'  <!-- chargeback_account_ -->
		</if>
	</sql>
	
</mapper>